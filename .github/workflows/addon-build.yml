name: Build & Push Addon Images

on:
  push:
    paths:
      - '**'

jobs:
  detect-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed
        uses: tj-actions/changed-files@v44
        with:
          separator: ','

      - name: Read addon config
        id: addons
        run: |
          echo "ADDONS=$(yq '.addons | join(",")' .github/addons.yaml)" >> $GITHUB_OUTPUT

      - name: Detect changed addons
        id: detect
        run: |
          ADDONS="${{ steps.addons.outputs.ADDONS }}"
          echo "$ADDONS" | tr ',' '\n' | grep -v '^$' > all_addons.txt
          echo '${{ steps.changed.outputs.all_changed_files }}' | tr ',' '\n' > changed.txt
          echo "" > build_addons.txt
          while read addon; do
            if grep -q "^$addon/" changed.txt || grep -q "^$addon$" changed.txt; then
              echo "$addon" >> build_addons.txt
            fi
          done < all_addons.txt
          sort -u build_addons.txt > uniq_build_addons.txt
          echo "addons=$(paste -sd, uniq_build_addons.txt)" >> $GITHUB_OUTPUT

      - name: Build and push each addon for all architectures
        if: steps.detect.outputs.addons != ''
        run: |
          IFS=',' read -ra ADDONS <<< "${{ steps.detect.outputs.addons }}"
          for addon in "${ADDONS[@]}"; do
            [ -z "$addon" ] && continue
            echo "Building $addon"
            cd "$addon"
            ARCHS=$(yq '.build_from | keys | join(" ")' build.yaml)
            for arch in $ARCHS; do
              IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/$(echo $addon | tr '/' '-')-$arch"
              TAG="latest"
              docker buildx build --platform linux/$arch -t "$IMAGE_NAME:$TAG" --push --build-arg BUILD_FROM=$(yq ".build_from.$arch" build.yaml) .
              echo "Pushed $IMAGE_NAME:$TAG"
            done
            cd - || exit 1
          done